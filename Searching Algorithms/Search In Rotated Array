/*Given an array of integers A of size N and an integer B. array A is rotated at some pivot unknown to you beforehand.
You are given a target value B to search. If found in the array, return its index, otherwise return -1.*/

/*
Input Format
The first argument given is the integer array A.
The second argument given is the integer B.

Output Format
Return index of B in array A, otherwise return -1

Constraints
1 <= N <= 1000000
1 <= A[i] <= 10^9
all elements in A are disitinct.
*/



int Solution::search(const vector<int> &A, int B) {
    int n=A.size();
    int l=0;
    int r=n-1;
    while(l<=r)
    {
        int mid=l+(r-l)/2;
        if(A[mid]==B)
            return mid;
        else if(A[mid]<A[r])
        {
            if(B>A[mid]&&B<=A[r])
                l=mid+1;
            else
                r=mid-1;
        }
        else
        {
            if(B<A[mid]&&B>=A[l])
                r=mid-1;
            else
                l=mid+1;
        }
    }
    return -1;
    
}