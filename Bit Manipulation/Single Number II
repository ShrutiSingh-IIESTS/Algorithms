/* Given an array of integers, every element appears thrice except for one which occurs once. Find that element which does not appear thrice. */


/*
Input Format:
   First and only argument of input contains an integer array A

Output Format:
    return a single integer.

Constraints:
2 <= N <= 5 000 000  
0 <= A[i] <= INT_MAX
*/

int Solution::singleNumber(const vector<int> &A) {
    int n=A.size();
    int shift=1;
    int ans=0;
    int num=0;
    while(num<=31)
    {
        int t=0;
        for(int i=0;i<n;i++)
        {
            if((A[i]&shift)!=0)
            {
                t++;
            }
        }
        if(t%3!=0)
        {
            ans=pow(2,num)+ans;
        }
        num++;
        shift=shift<<1;
    }
    return ans;
}