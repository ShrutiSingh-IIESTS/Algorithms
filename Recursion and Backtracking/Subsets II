/*
Given a collection of integers that might contain duplicates, S, return all possible subsets.
*/

/*
Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
The subsets must be sorted lexicographically.
*/

/*
Example : If S = [1,2,2], the solution is:
[
[],
[1],
[1,2],
[1,2,2],
[2],
[2, 2]
]
*/


void addSubsets(vector<vector<int>> &result,vector<int> &temp,vector<int> A,int start)
{
    while(start<A.size())
    {
        temp.push_back(A[start]);
        result.push_back(temp);
        addSubsets(result,temp,A,start+1);
        while(A[start]==temp.back()&&start<A.size())
       {
           start++;
       }
        temp.pop_back();
    }
}
vector<vector<int> > Solution::subsetsWithDup(vector<int> &A) {
    sort(A.begin(),A.end());
    vector<vector<int>> result;
    vector<int> temp;
    result.push_back(temp);
    int start=0;
    addSubsets(result,temp,A,start);
    return result;
}
