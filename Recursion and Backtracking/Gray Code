/*
The gray code is a binary numeral system where two successive values differ in only one bit. 
Given a non-negative integer n representing the total number of bits in the code,print the sequence of gray code. 
*/

/*
A gray code sequence must begin with 0. For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:
00 - 0
01 - 1
11 - 3
10 - 2
There might be multiple gray code sequences possible for a given n. Return any such sequence.
*/


vector<string> addGraycode(int A)
{
    if(A==1)
    {
        vector<string> ans;
        ans.push_back("0");
        ans.push_back("1");
        return ans;
    }
    vector<string> ans;
    vector<string> temp = addGraycode(A-1);
    for(int i=0;i<temp.size();i++)
    {
        ans.push_back("0"+temp[i]);
    }
    for(int i=temp.size()-1;i>=0;i--)
    {
        ans.push_back("1"+temp[i]);
    }
    return ans;
}
int convert(string s)
{
    int p=0;
    int ans=0;
    for(int i=s.size()-1;i>=0;i--)
    {
        ans=ans+(int)(s[i]-'0')*(int)pow(2,p);
        p++;
    }
    return ans;
}
vector<int> Solution::grayCode(int A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    vector<int> result;
    vector<string> temp;
    temp=addGraycode(A);
    for(int i=0;i<temp.size();i++)
    {
        result.push_back(convert(temp[i]));
    }
    return result;
}
